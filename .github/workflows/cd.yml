---
    name: continous deployement
    on:
        push:
            branches:
                - release
    jobs:
      deployment_cluster:
         runs-on: ubuntu-latest
         permissions:
          id-token: write 
          contents: read 

         steps: 
          - name: Checkout code
            uses: actions/checkout@v4
    
    
          - name: Log in to Docker Hub
            uses: docker/login-action@v2
            with:
              username: sadik8143
              password: Sadik@8143
          - name: pulling the image
            run: |
              docker pull sadik8143/springpetclinic:1.0

          - name: installing trivy
            run: |
                sudo apt-get install wget apt-transport-https gnupg lsb-release
                wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | gpg --dearmor | sudo tee /usr/share/keyrings/trivy.gpg > /dev/null
                echo "deb [signed-by=/usr/share/keyrings/trivy.gpg] https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main" | sudo tee -a /etc/apt/sources.list.d/trivy.list
                sudo apt-get update
                sudo apt-get install trivy -y

      
          - name: Scan the image and save results
            run: |
                  trivy image --format json --output trivy-results.json sadik8143/springpetclinic:1.0

      
          - name: Upload Trivy scan results
            uses: actions/upload-artifact@v3
            with:
                name: trivy-results
                path: trivy-results.json 

           
          - name: Azure login
            uses: azure/login@v2
            with:
              creds: '{
                      "clientId": "22008831-1561-42ff-879f-e7a0ca7298ef",
                      "clientSecret": "xk~8Q~_LmrmyDOphBwMcSEJhSTgaP4cCTc~jrb5q",
                      "subscriptionId": "48779e5a-57d5-432c-8ddf-d51b82b18f09",
                      "tenantId": "99ef06df-664d-4769-9eaa-9f4ba6706a0d",
                      "activeDirectoryEndpointUrl": "https://login.microsoftonline.com",
                      "resourceManagerEndpointUrl": "https://management.azure.com/",
                      "activeDirectoryGraphResourceId": "https://graph.windows.net/",
                      "sqlManagementEndpointUrl": "https://management.core.windows.net:8443/",
                      "galleryEndpointUrl": "https://gallery.azure.com/",
                      "managementEndpointUrl": "https://management.core.windows.net/"}'
                      
          - name: Azure CLI script
            uses: azure/cli@v2
            with:
              azcliversion: latest
              inlineScript: |
                          MY_RESOURCE_GROUP_NAME="myAKSResourceGroup"
                          REGION="eastus"
                          MY_AKS_CLUSTER_NAME="myAKSCluster"
                          MY_DNS_LABEL="mydnslabel"
              
                          # Create the resource group
                          az group create --name $MY_RESOURCE_GROUP_NAME --location $REGION
                          if az aks show -n $MY_AKS_CLUSTER_NAME -g $MY_RESOURCE_GROUP_NAME -o tsv; then
                            echo "AKS cluster '$MY_AKS_CLUSTER_NAME' already exists."
                          else
                            echo "Creating AKS cluster '$MY_AKS_CLUSTER_NAME'..."
        
              
                          # Create the AKS cluster
                          az aks create \
                            --resource-group $MY_RESOURCE_GROUP_NAME \
                            --name $MY_AKS_CLUSTER_NAME \
                            --node-count 2 \
                            --node-vm-size "Standard_B2ms" \
                            --generate-ssh-keys \                         
                          # Get credentials for the AKS cluster
                          az aks get-credentials --resource-group $MY_RESOURCE_GROUP_NAME --name $MY_AKS_CLUSTER_NAME
                          fi
          - name: Install Helm
            run: |
                curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
                chmod +x get_helm.sh
                bash get_helm.sh
          - name: creating new helm chart
            run: |
              helm create spc-chart
          - name: List contents of spc-chart (for verification)
            run: ls -R spc-chart || echo "spc-chart directory does not exist.
              
          



         
            
    













